package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"
	"time"
	"vehicles_api/api/graph"
	"vehicles_api/api/graph/model"
)

// Vehicles is the resolver for the vehicles field.
func (r *queryResolver) Vehicles(ctx context.Context) ([]*model.Vehicle, error) {
	vehicles, err := r.Resolver.vehicleRepo.FindAll()
	if err != nil {
		return nil, err
	}

	// Convert domain vehicles to model vehicles
	result := make([]*model.Vehicle, len(vehicles))
	for i, v := range vehicles {
		result[i] = &model.Vehicle{
			ID:        fmt.Sprintf("%d", v.ID),
			Make:      v.Make,
			Model:     v.Model,
			Year:      v.Year,
			Vin:       v.VIN,
			CreatedAt: v.CreatedAt.Format(time.RFC3339),
			UpdatedAt: v.UpdatedAt.Format(time.RFC3339),
		}
	}
	return result, nil
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
